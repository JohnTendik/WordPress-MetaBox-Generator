(this["webpackJsonpmetabox-generator"]=this["webpackJsonpmetabox-generator"]||[]).push([[0],{149:function(e,t,n){},150:function(e,t,n){},152:function(e,t,n){},153:function(e,t,n){},154:function(e,t,n){},155:function(e,t,n){},453:function(e,t,n){},454:function(e,t,n){},460:function(e,t,n){},461:function(e,t,n){"use strict";n.r(t);var a=n(2),c=n.n(a),i=n(20),s=n.n(i),l=function(e){e&&e instanceof Function&&n.e(155).then(n.bind(null,509)).then((function(t){var n=t.getCLS,a=t.getFID,c=t.getFCP,i=t.getLCP,s=t.getTTFB;n(e),a(e),c(e),i(e),s(e)}))},o=(n(149),n(150),n(0)),r=function(){return Object(o.jsxs)("div",{className:"admin-menu",children:[Object(o.jsx)("strong",{children:"JT's Meta Box Generator"}),Object(o.jsx)("p",{children:"Thank you for using my stuffs!"})]})},d=n(11),j=(n(152),n(3)),b=n(12),u=(n(153),function(e){var t=Object(a.useState)(!0),n=Object(d.a)(t,2),c=n[0],i=n[1],s=e.sticky?"sticky":"";return Object(o.jsxs)("div",{className:"meta-box ".concat(s),children:[Object(o.jsxs)("div",{className:"meta-box-header",onClick:function(){return i(!c)},children:[Object(o.jsx)("strong",{children:e.title?e.title:"Default Meta Box"}),c?Object(o.jsx)(b.b,{color:"787c82"}):Object(o.jsx)(b.a,{color:"787c82"})]}),c&&Object(o.jsx)("div",{className:"meta-box-body",children:e.customContent?Object(j.a)({},e.customContent):Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)("p",{children:"This is a default box for visual representation"}),Object(o.jsx)("div",{className:"blank-content"}),Object(o.jsx)("div",{className:"blank-content"}),Object(o.jsx)("div",{className:"blank-content small"}),Object(o.jsx)("div",{className:"blank-content large"}),Object(o.jsx)("div",{className:"blank-content"}),Object(o.jsx)("div",{className:"blank-content small"})]})})]})}),x=(n(154),n(155),n(48)),p=n(33),h={metaBoxGlobalOptions:{id:"jt-custom-meta-box-id",title:"Custom Meta Box",screens:[],textDomain:"jt-mbg-text-domain",context:"advanced",priority:"default",className:"JT_MBG_CLASS"},fields:[],generatedCode:"Click the generate code button when you are ready."},m=Object(a.createContext)(h),O=m.Provider,v=function(e){var t=e.children,n=Object(a.useReducer)((function(e,t){switch(t.type){case"action description":return Object(j.a)({},e);case"add new field":return Object(j.a)(Object(j.a)({},e),{},{fields:[].concat(Object(p.a)(e.fields),[t.value])});case"update meta box option":return Object(j.a)(Object(j.a)({},e),{},{metaBoxGlobalOptions:Object(j.a)(Object(j.a)({},e.metaBoxGlobalOptions),{},Object(x.a)({},t.value.optionName,t.value.value))});case"update field option":var n=e.fields;return n[t.value.indx]=Object(j.a)(Object(j.a)({},n[t.value.indx]),{},Object(x.a)({},t.value.optionName,t.value.value)),Object(j.a)(Object(j.a)({},e),{},{fields:n});case"update screens":var a=e.metaBoxGlobalOptions.screens;return a=a.includes(t.value)?a.filter((function(e){return e!==t.value})):[].concat(Object(p.a)(a),[t.value]),Object(j.a)(Object(j.a)({},e),{},{metaBoxGlobalOptions:Object(j.a)(Object(j.a)({},e.metaBoxGlobalOptions),{},{screens:a})});case"delete field":var c=e.fields;return c=c.filter((function(e,n){return n!==t.value})),Object(j.a)(Object(j.a)({},e),{},{fields:c});case"update generated code":return Object(j.a)(Object(j.a)({},e),{},{generatedCode:t.value});default:throw new Error}}),h),c=Object(d.a)(n,2),i=c[0],s=c[1];return Object(o.jsx)(O,{value:{state:i,dispatch:s},children:t})},f=(n(156),function(e){var t=e.field,n=e.isEditting,c=e.indx,i=Object(a.useContext)(m).dispatch,s=[{label:"Field Id",value:t.id,optionName:"id"},{label:"Field Label",value:t.label,optionName:"label"}],l=[{label:"Placeholder",value:t.placeholder,optionName:"placeholder"}],r=[{label:"Max value",value:t.max,optionName:"max",type:"number"},{label:"Min value",value:t.min,optionName:"min",type:"number"},{label:"Step",value:t.step,optionName:"step",type:"number"}],d=[{label:"Max value",value:t.max,optionName:"max",type:"date"},{label:"Min value",value:t.min,optionName:"min",type:"date"}],b=function(){return function(){var e=[].concat(s);switch(t.type){case"text":e=[].concat(Object(p.a)(e),l);break;case"number":case"range":e=[].concat(Object(p.a)(e),r);break;case"date":e=[].concat(Object(p.a)(e),d)}return e}().map((function(e){return Object(o.jsxs)("div",{className:"field-option-container",children:[Object(o.jsx)("label",{children:e.label}),Object(o.jsx)("input",{name:e.label.replace(" ",""),type:e.type||"text",value:e.value,onChange:function(t){return u(t,e.optionName)}})]})}))},u=function(e,t){var n=e.currentTarget.value;"id"===t&&(n=(n=n.replace(/[- ]/gi,"_")).replace(/[^a-z0-9_]/gi,"")),i({type:"update field option",value:{indx:c,value:n,optionName:t}})};return Object(o.jsxs)("div",{className:"custom-field",children:[Object(o.jsxs)("div",{className:"field-preview",children:[Object(o.jsx)("label",{htmlFor:t.id,children:t.label}),Object(o.jsx)("input",Object(j.a)({},t))]}),n?Object(o.jsxs)("div",{className:"field-options",children:[Object(o.jsx)("h4",{children:"Field Options"}),b()]}):void 0]})}),_=function(e){var t=e.field,n=e.isEditting,c=e.indx,i=Object(a.useContext)(m).dispatch,s=[{label:"Field Id",value:t.id,optionName:"id"},{label:"Text",value:t.text,optionName:"text"}],l=function(e,t){var n=e.currentTarget.value;"id"===t&&(n=(n=n.replace(/[- ]/gi,"_")).replace(/[^a-z0-9_]/gi,"")),i({type:"update field option",value:{indx:c,value:n,optionName:t}})};return Object(o.jsxs)("div",{className:"custom-field",children:[Object(o.jsx)("div",{className:"field-preview",children:Object(o.jsx)("span",{id:t.id,children:t.text||"Add some descriptive text here"})}),n?Object(o.jsxs)("div",{className:"field-options",children:[Object(o.jsx)("h4",{children:"Field Options"}),s.map((function(e){return"text"===e.optionName?Object(o.jsxs)("div",{className:"field-option-container",children:[Object(o.jsx)("label",{children:e.label}),Object(o.jsx)("textarea",{style:{resize:"none"},onChange:function(t){return l(t,e.optionName)},children:e.value})]}):Object(o.jsxs)("div",{className:"field-option-container",children:[Object(o.jsx)("label",{children:e.label}),Object(o.jsx)("input",{type:e.type||"text",value:e.value,onChange:function(t){return l(t,e.optionName)}})]})}))]}):void 0]})},g=function(e){var t=e.field,n=e.indx,c=Object(a.useContext)(m).dispatch,i=Object(a.useState)(!1),s=Object(d.a)(i,2),l=s[0],r=s[1],u={indx:n,field:t,isEditting:l};return Object(o.jsxs)("div",{className:"custom-field-container ".concat(l?"editting":""),children:[function(e){switch(t.type){case"tel":case"url":case"date":case"time":case"text":case"email":case"color":case"range":case"button":case"number":case"hidden":case"password":return Object(o.jsx)(f,Object(j.a)({},e));case"paragraph":case"title":return Object(o.jsx)(_,Object(j.a)({},e))}}(u),l&&Object(o.jsxs)("button",{className:"button edit-field",onClick:function(){c({type:"delete field",value:n})},children:[Object(o.jsx)(b.d,{})," Delete"]}),Object(o.jsxs)("button",{className:"button edit-field",onClick:function(){r(!l)},children:[l?Object(o.jsx)(b.b,{}):Object(o.jsx)(b.a,{})," Edit"]})]})},y=function(e){var t=Object(a.useContext)(m).state,n=t.metaBoxGlobalOptions,c=t.fields,i=Object(a.useState)("fields"),s=Object(d.a)(i,2),l=s[0],r=s[1];Object(a.useEffect)((function(){e.metaBoxView!==l&&r(e.metaBoxView)}),[e.metaBoxView]);return Object(o.jsx)("div",{children:Object(o.jsxs)("div",{className:"meta-box",children:[Object(o.jsx)("div",{className:"meta-box-header",children:Object(o.jsx)("strong",{children:n.title})}),Object(o.jsx)("div",{className:"meta-box-body",children:c.length?c.map((function(e,t){return Object(o.jsx)(g,{field:e,indx:t},t)})):Object(o.jsx)("div",{children:Object(o.jsx)("p",{children:"Begin by adding a new field to your meta-box using the select + button in the side column!"})})})]})})},N=(n(453),function(e){return Object(o.jsxs)("div",{className:"tag",children:[Object(o.jsx)("span",{children:e.name}),Object(o.jsx)("button",{onClick:e.onClose,children:Object(o.jsx)(b.c,{})})]})}),C=function(e){var t=e.title,n=e.handleOnChange;return Object(o.jsxs)("div",{className:"checkbox-container",children:[Object(o.jsx)("span",{children:t}),Object(o.jsx)("input",{type:"checkbox",onChange:function(e){return n(e.target.checked,e)}})]})},w=(n(454),function(e){var t=e.name,n=e.value,a=e.options,c=e.handleOnChange,i=function(e){var t=e.target,n=(t.name,t.value);c(e,n)};if(a.length)return Object(o.jsx)("div",{className:"radio-buttons-container",children:a.map((function(e,a){return Object(o.jsxs)("label",{htmlFor:"".concat(e,"_").concat(a),className:"radioInput",children:[Object(o.jsx)("input",{id:"".concat(e,"_").concat(a),defaultChecked:0===a,checked:n===e,type:"radio",name:t,value:e,onChange:i})," ",e]},a)}))})}),k=function(e){var t=Object(a.useContext)(m),n=t.state,c=t.dispatch,i=n.metaBoxGlobalOptions,s=Object(a.useState)(""),l=Object(d.a)(s,2),r=l[0],j=l[1],u=function(e,t){var n=e.currentTarget.value;c({type:"update meta box option",value:{value:n,optionName:t}})},x=function(e,t){""!==t&&t&&c({type:"update screens",value:t})};return Object(o.jsxs)("div",{className:"meta-box-options-container",children:[Object(o.jsx)("p",{children:"General"}),Object(o.jsx)("div",{className:"meta-box-option",children:Object(o.jsxs)("div",{children:[Object(o.jsxs)("label",{children:["Meta Box Title",Object(o.jsx)("small",{children:Object(o.jsx)("em",{children:"(string) (Required) Title of the meta box."})})]}),Object(o.jsx)("div",{children:Object(o.jsx)("input",{placeholder:i.title,value:i.title,onChange:function(e){return u(e,"title")}})})]})}),Object(o.jsx)("div",{className:"meta-box-option",children:Object(o.jsxs)("div",{children:[Object(o.jsxs)("label",{children:["Meta Box ID",Object(o.jsx)("small",{children:Object(o.jsx)("em",{children:"(string) (Required) Meta box ID (used in the 'id' attribute for the meta box)."})})]}),Object(o.jsx)("div",{children:Object(o.jsx)("input",{placeholder:i.id,value:i.id,onChange:function(e){return u(e,"id")}})})]})}),Object(o.jsx)("div",{className:"meta-box-option",children:Object(o.jsxs)("div",{children:[Object(o.jsxs)("label",{children:["Screens",Object(o.jsx)("small",{children:Object(o.jsx)("em",{children:"(Optional) The screen or screens on which to show the box (such as a post type, 'link', or 'comment')"})})]}),Object(o.jsxs)("div",{children:[Object(o.jsxs)("div",{className:"screen-post-types",children:[Object(o.jsx)(C,{title:"post",handleOnChange:function(e){x(0,"post")}}),Object(o.jsx)(C,{title:"page",handleOnChange:function(e){x(0,"page")}})]}),Object(o.jsx)("div",{className:"screen-post-types",children:i.screens.filter((function(e){return"post"!==e&&"page"!==e})).map((function(e,t){return Object(o.jsx)(N,{name:e,onClose:function(){return x(0,e)}},t)}))})]})]})}),Object(o.jsx)("div",{className:"meta-box-option",children:Object(o.jsxs)("div",{children:[Object(o.jsxs)("label",{children:["Custom Screens",Object(o.jsx)("small",{children:Object(o.jsx)("em",{children:"Custom post types (such as 'movie', 'custom_post_type')"})})]}),Object(o.jsxs)("div",{className:"flex",children:[Object(o.jsx)("input",{onKeyPress:function(e){"Enter"===e.key&&(x(0,r),j(""))},placeholder:"custom",value:r,onChange:function(e){return j(e.currentTarget.value)}}),Object(o.jsxs)("button",{className:"button",onClick:function(e){x(0,r),j("")},children:[Object(o.jsx)(b.e,{})," Add"]})]})]})}),Object(o.jsx)("div",{className:"meta-box-option",children:Object(o.jsxs)("div",{children:[Object(o.jsxs)("label",{children:["Context",Object(o.jsx)("small",{children:Object(o.jsx)("em",{children:"(Optional) The context within the screen where the box should display. Available contexts vary from screen to screen. Post edit screen contexts include 'normal', 'side', and 'advanced'."})})]}),Object(o.jsx)("div",{children:Object(o.jsx)(w,{name:"context",value:i.context,options:["advanced","side","normal"],handleOnChange:function(e){return u(e,"context")}})})]})}),Object(o.jsx)("div",{className:"meta-box-option",children:Object(o.jsxs)("div",{children:[Object(o.jsxs)("label",{children:["Priority",Object(o.jsx)("small",{children:Object(o.jsx)("em",{children:"(Optional) The priority within the context where the box should show. Accepts 'high', 'core', 'default', or 'low'."})})]}),Object(o.jsx)("div",{children:Object(o.jsx)(w,{name:"priority",value:i.priority,options:["high","core","default","low"],handleOnChange:function(e){return u(e,"priority")}})})]})}),Object(o.jsx)("p",{children:"Advanced"}),Object(o.jsx)("div",{className:"meta-box-option",children:Object(o.jsxs)("div",{children:[Object(o.jsxs)("label",{children:["Text Domain",Object(o.jsx)("small",{children:Object(o.jsx)("em",{children:"(Optional) text domain for translations"})})]}),Object(o.jsx)("div",{children:Object(o.jsx)("input",{placeholder:i.textDomain,value:i.textDomain,onChange:function(e){return u(e,"textDomain")}})})]})}),Object(o.jsx)("div",{className:"meta-box-option",children:Object(o.jsxs)("div",{children:[Object(o.jsxs)("label",{children:["Class Name",Object(o.jsx)("small",{children:Object(o.jsx)("em",{children:"(Optional) The php class name that will be given for your code"})})]}),Object(o.jsx)("div",{children:Object(o.jsx)("input",{placeholder:i.className,value:i.className,onChange:function(e){return u(e,"className")}})})]})})]})},$=n(87),T=function(){var e=Object(a.useContext)(m).state,t=e.generatedCode;return console.log(e),Object(o.jsx)("div",{className:"",children:Object(o.jsx)($.a,{text:t,useScroll:!0,customStyle:{maxHeight:"600px",overflow:"scroll"},showLineNumbers:!0,language:"php",theme:$.b,codeBlock:!0})})},B=function(){var e=Object(a.useContext)(m),t=e.state,n=e.dispatch,c=t.fields,i=t.metaBoxGlobalOptions,s=Object(a.useState)("text"),l=Object(d.a)(s,2),r=l[0],j=l[1];return Object(o.jsxs)("section",{className:"layout-container",children:[Object(o.jsxs)("div",{className:"main dropzone",children:[Object(o.jsx)("input",{className:"post-title",defaultValue:"WordPress Post Title"}),Object(o.jsx)("div",{className:"item",children:Object(o.jsx)(y,{})}),Object(o.jsx)(u,{title:"Metabox Settings",customContent:Object(o.jsx)(o.Fragment,{children:Object(o.jsx)(k,{})})}),Object(o.jsx)(u,{title:"Code",customContent:Object(o.jsx)(o.Fragment,{children:Object(o.jsx)(T,{})})})]}),Object(o.jsxs)("div",{className:"side dropzone",children:[Object(o.jsx)(u,{title:"Add new fields",customContent:Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)("p",{children:"Add new fields to your meta box below!"}),Object(o.jsxs)("div",{className:"add-field-container",children:[Object(o.jsx)("label",{htmlFor:"fieldtype",children:"Field type:"}),Object(o.jsxs)("select",{id:"fieldtype",onChange:function(e){var t=e.target.value;j(t)},defaultValue:r,children:[Object(o.jsx)("option",{value:"text",children:"Text Input"}),Object(o.jsx)("option",{value:"number",children:"Number"}),Object(o.jsx)("option",{value:"tel",children:"Tel"}),Object(o.jsx)("option",{value:"email",children:"Email"}),Object(o.jsx)("option",{value:"password",children:"Password"}),Object(o.jsx)("option",{value:"date",children:"Date"}),Object(o.jsx)("option",{value:"time",children:"Time"}),Object(o.jsx)("option",{value:"range",children:"Range"}),Object(o.jsx)("option",{value:"hidden",children:"Hidden"}),Object(o.jsx)("option",{value:"color",children:"Color"}),Object(o.jsx)("option",{value:"paragraph",children:"Description Text"})]}),Object(o.jsx)("button",{className:"button primary",onClick:function(){return e=r,void n({type:"add new field",value:{id:"new_field_id_".concat(c.length),type:e,label:"New field"}});var e},children:"Add New Field"})]})]})}),Object(o.jsx)(u,{title:"Generate",customContent:Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)("p",{children:"Once you are happy with your meta box, click the generate button below to get your code for free!"}),Object(o.jsx)("button",{className:"button primary",onClick:function(){if(c.length){var e="<?php\n\n/**\n * Generated by the WordPress Meta Box Generator By John Tendik\n * https://johntendik.com/tools/wordpress-meta-box-generator/\n * \n * Retrieving the values:\n * test = get_post_meta( get_the_ID(), 'name_of_field', true )\n */\n\nclass JT_Metabox_Generator {\n  public function __construct() {\n\t\tadd_action( 'add_meta_boxes', array( $this, 'add_meta_boxes' ) );\n\t\tadd_action( 'save_post', array( $this, 'save_post' ), 10, 2 );\n\t}\n\n  public function add_meta_boxes() {\n    add_meta_box(\n      '@@metabox-id@@',\n      __('@@metabox-title@@', '@@text-domain@@'),\n      array( $this, 'add_meta_box_callback' ),\n      array(@@screens@@),\n      '@@context@@',\n      '@@priority@@'\n    );\n\t}\n\n  public function save_post($post_id, $post) {\n    /* Verify the nonce before proceeding. */\n    if ( !isset( $_POST['jt_metabox_nonce'] ) || !wp_verify_nonce( $_POST['jt_metabox_nonce'], basename( __FILE__ ) ) )\n      return $post_id;\n\n    /* Get the post type object. */\n    $post_type = get_post_type_object( $post->post_type );\n  \n    /* Check if the current user has permission to edit the post. */\n    if ( !current_user_can( $post_type->cap->edit_post, $post_id ) )\n      return $post_id;\n\n    /* Get the meta key. */\n    $meta_key_prefix = 'jt_mbg_';\n\n\n    /* DO NOT FORGET TO DO YOUR OWN SANITIZATION HERE!! */\n\n    @@save_post@@\n  }\n\n  public function add_meta_box_callback() {\n    echo \"<style>div.jt-meta-box-flex{display:flex;align-items:flex-start;margin: 14px 0;}div.jt-meta-box-flex label{width: 190px;margin: 0}</style>\";\n\n    wp_nonce_field( basename( __FILE__ ), 'jt_metabox_nonce' );\n    @@fields@@\n  }\n\n  private function get_value($id) {\n    global $post;\n    $meta_key_prefix = 'jt_mbg_';\n\t\tif ( metadata_exists( 'post', $post->ID, $meta_key_prefix . $id ) ) {\n\t\t\t$value = get_post_meta( $post->ID, $meta_key_prefix . $id, true );\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t\treturn $value;\n  }\n}\n\nnew JT_Metabox_Generator;\n\n?>";if(e=(e=(e=(e=(e=e.replace("@@metabox-id@@",i.id)).replace("@@metabox-title@@",i.title)).replace("@@text-domain@@",i.textDomain)).replace("@@context@@",i.context)).replace("@@priority@@",i.priority),i.screens.length){var t=i.screens.map((function(e){return"'".concat(e,"'")}));e=e.replace("@@screens@@",t.join(","))}else e=e.replace("@@screens@@","");if(c.length){var a=c.map((function(e){if("color"===e.type)return"\n            $".concat(e.id,"_value = $this->get_value('").concat(e.id,"');\n            echo \"<div class='jt-meta-box-flex'><label for='").concat(e.id,"'>").concat(e.label,"</label><input id='").concat(e.id,"' name='").concat(e.id,"' value='#$").concat(e.id,"_value' type='").concat(e.type,"' /></div>\";\n          ");if("paragraph"===e.type)return"\n            $".concat(e.id,"_value = $this->get_value('").concat(e.id,"');\n            echo \"<div class='jt-meta-box-flex'><span id='").concat(e.id,"'>").concat(e.text,'</span></div>";\n          ');var t=e.placeholder?"placeholder='".concat(e.placeholder,"'"):"";return"\n            $".concat(e.id,"_value = $this->get_value('").concat(e.id,"');\n            echo \"<div class='jt-meta-box-flex'><label for='").concat(e.id,"'>").concat(e.label,"</label><input id='").concat(e.id,"' name='").concat(e.id,"' value='$").concat(e.id,"_value' type='").concat(e.type,"' ").concat(t,' /></div>";\n          ')}));e=e.replace("@@fields@@",a.join("\n\r"));var s=c.map((function(e){return"$".concat(e.id,"_new_val = ( isset( $_POST['").concat(e.id,"'] ) ? sanitize_html_class( $_POST['").concat(e.id,"'] ) : null );\n      if ($").concat(e.id,'_new_val !== null) {\n        update_post_meta( $post_id, $meta_key_prefix . "').concat(e.id,'", $').concat(e.id,"_new_val );\n      }")}));e=e.replace("@@save_post@@",s.join("\n\r"))}else e=e.replace("@@fields@@","");n({type:"update generated code",value:e})}else alert("You must add at least 1 field before you can generate the meta box.")},children:"Generate"})]})})]})]})};n(460);var F=function(){return Object(o.jsxs)("div",{className:"App",children:[Object(o.jsx)(r,{}),Object(o.jsx)(B,{})]})};s.a.render(Object(o.jsx)(c.a.StrictMode,{children:Object(o.jsx)(v,{children:Object(o.jsx)(F,{})})}),document.getElementById("root")),l()}},[[461,152,153]]]);
//# sourceMappingURL=main.08947674.chunk.js.map